// <auto-generated />
using System;
using Infrastructure.FarmRegistry.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Registration.Migrations
{
    [DbContext(typeof(RegistrationContext))]
    [Migration("20240118100506_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedDomain.Entities.Subscribe.FarmRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("IsApprove")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModify")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PaymentDetail")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SiteCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("SolutionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SolutionId");

                    b.ToTable("FarmRegistrations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6bdb6df1-e30a-4572-9308-13bf8be8715d"),
                            Address = "USA",
                            Cost = 10m,
                            CreatedDate = new DateTime(2024, 1, 18, 17, 5, 6, 809, DateTimeKind.Local).AddTicks(4062),
                            Email = "owner01@farmer.test",
                            FirstName = "User",
                            IsApprove = 0,
                            IsDeleted = false,
                            LastModify = new DateTime(2024, 1, 18, 17, 5, 6, 809, DateTimeKind.Local).AddTicks(4071),
                            LastName = "Owner 01",
                            PaymentDetail = "test detail",
                            Phone = "0132302225",
                            SiteCode = "test.agri.01",
                            SiteName = "Farm 01 test",
                            SolutionId = new Guid("3c9cca4d-0899-45de-951e-8a3e8364758c")
                        });
                });

            modelBuilder.Entity("SharedDomain.Entities.Subscribe.PackageSolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(150)");

                    b.Property<long?>("DurationInMonth")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModify")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PackageSolutions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d3cf28e-b1c4-479c-8ccb-3b5539075507"),
                            CreatedDate = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3850),
                            Description = "This is cheapest solution",
                            DurationInMonth = 6L,
                            IsDeleted = false,
                            LastModify = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3853),
                            Name = "Solution 1",
                            Price = 10m
                        },
                        new
                        {
                            Id = new Guid("91502f31-d06d-46d9-8dc1-5a657510ad90"),
                            CreatedDate = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3861),
                            Description = "This is medium solution",
                            DurationInMonth = 12L,
                            IsDeleted = false,
                            LastModify = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3862),
                            Name = "Solution 2",
                            Price = 100m
                        },
                        new
                        {
                            Id = new Guid("76929f49-e67b-4037-93ee-6a5f9618bbd3"),
                            CreatedDate = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3863),
                            Description = "This is vip solution",
                            DurationInMonth = 24L,
                            IsDeleted = false,
                            LastModify = new DateTime(2024, 1, 18, 17, 5, 6, 810, DateTimeKind.Local).AddTicks(3864),
                            Name = "Solution 3",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("SharedDomain.Entities.Subscribe.FarmRegistration", b =>
                {
                    b.HasOne("SharedDomain.Entities.Subscribe.PackageSolution", "Solution")
                        .WithMany()
                        .HasForeignKey("SolutionId")
                        .IsRequired();

                    b.Navigation("Solution");
                });
#pragma warning restore 612, 618
        }
    }
}
